[{"/home/ank/Acadza_Assingment/acadza_two/src/index.js":"1","/home/ank/Acadza_Assingment/acadza_two/src/App.js":"2","/home/ank/Acadza_Assingment/acadza_two/src/reportWebVitals.js":"3","/home/ank/Acadza_Assingment/acadza_two/src/InitialData.js":"4","/home/ank/Acadza_Assingment/acadza_two/src/Component/HeadingBar.js":"5","/home/ank/Acadza_Assingment/acadza_two/src/Component/Content.js":"6"},{"size":500,"mtime":1608037512393,"results":"7","hashOfConfig":"8"},{"size":283,"mtime":1608363693515,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608037512397,"results":"10","hashOfConfig":"8"},{"size":171,"mtime":1608144461012,"results":"11","hashOfConfig":"8"},{"size":1667,"mtime":1608269629370,"results":"12","hashOfConfig":"8"},{"size":5622,"mtime":1608363112157,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"de8tz3",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/ank/Acadza_Assingment/acadza_two/src/index.js",[],["30","31"],"/home/ank/Acadza_Assingment/acadza_two/src/App.js",[],"/home/ank/Acadza_Assingment/acadza_two/src/reportWebVitals.js",[],"/home/ank/Acadza_Assingment/acadza_two/src/InitialData.js",[],["32","33"],"/home/ank/Acadza_Assingment/acadza_two/src/Component/HeadingBar.js",["34"],"import React from 'react';\nimport Style from './HeadingBar.module.css'\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Divider from '@material-ui/core/Divider';\nconst navBar=()=>{\n    return(\n        <div className={Style.body}>\n            <div className={Style.welcome_board}>\n                <select className={Style.select_option}>\n                    <option>Board</option>\n                </select>\n                <div className={Style.welcome_div}>\n                    Welcome to Board\n                </div>\n                <div className={Style.select_option}><StarBorderIcon/></div>\n                <Divider className={Style.divider}/>\n                <div className={Style.select_option}>Add to team</div>\n                <div className={Style.select_option}><LockIcon className={Style.private_icon}/>Private</div>\n                <Divider className={Style.divider}/>\n                <div className={Style.circle_arrang}>\n                    <div className={Style.ak}>Ak</div>\n                    <div className={Style.two_line}>\n                        <div className={Style.line}></div>\n                        <div className={Style.line}></div>\n                    </div>\n                </div>\n                <div className={Style.select_option}>Invite</div>\n            </div>\n            <div className={Style.butler}>\n                <div className={Style.butler_div}>\n                    <img src=\"./butler.png\" style={{width:\"15px\", height:\"15px\"}}></img>\n                    <p>Butller</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default navBar;","/home/ank/Acadza_Assingment/acadza_two/src/Component/Content.js",["35","36","37"],"import React, { Component } from 'react'\nimport Style from './Content.module.css'\nimport Divider from '@material-ui/core/Divider';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { DragDropContext, Draggable,Droppable } from 'react-beautiful-dnd';\n\nexport default class Content extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            init:[\n                \"This is a card 'Drag it' into another list to show done.\",\n                \"Add all the card and list you need.\",\n                \"Add member to a board (via the slider) to collaborate, share and discuss.\",\n                \"Use the + in the top menu to make your first board now\",\n                \"There's lots of magic....\"\n            ],\n            final:[],\n            addItem:'',\n        }\n    }\n    onDragOver=(param)=>{\n        const source=param.source.index;\n        const final=param.destination?.index\n        if(final!=undefined){\n          const item=this.state.init[source]\n          this.state.init.splice(source,1)\n          this.state.final.push(item)\n        }\n    }\n\n    render() {\n        return (\n            <div className={Style.body}>\n                <div className={Style.card_arrng}>\n                <DragDropContext onDragEnd={(param)=>this.onDragOver(param)}>\n                    <Droppable droppableId=\"droppable-1\">\n                        {(provided, snapshot) => (\n                        <>\n                            <div className={Style.card}>\n                                <div className={Style.card_header}>stuff to try(this is a list)</div>\n                                <div className={Style.item_card_arrng}>\n                                    {\n                                        this.state.init.map((e, i)=>{\n                                            return(\n                                                <Draggable  draggableId={`draggable-${i}`} index={i}>\n                                                    {(provided, snapshot) => (\n                                                        <div className={Style.item_card}\n                                                        ref={provided.innerRef}\n                                                        className={snapshot.isDragging? Style.card_item_drag:Style.item_card}\n                                                        {...provided.draggableProps}\n                                                        {...provided.dragHandleProps}>\n                                                        {e}\n                                                        </div>\n                                                    )}\n                                                </Draggable> \n                                            )\n                                        })\n                                    }\n                                    \n                                </div>\n                                <div className={Style.card_footer}>+ Add another card</div>\n                            </div>\n                            <div className={Style.card} style={{backgroundColor:\"white\"}}>\n                                <div className={Style.card_header}>\n                                    <div style={{width:\"90%\"}}>Add to a Team</div>\n                                    <div style={{width:\"10%\"}}><ClearIcon style={{width:\"20px\", height:\"20px\"}}/></div>\n                                </div>\n                                <Divider style={{width:\"90%\", height:\"2px\"}}/>\n                                <div className={Style.item_card_arrng}>\n                                    <div>\n                                        <img src='./cardimage.png'></img>\n                                    </div>\n                                    <div className={Style.card_context_arrng}>\n                                        <p style={{height:\"0px\", fontWeight:\"500\"}}>Build your dream Team</p>\n                                        <p>Team Make it easy to orgnize board and member in one place</p>\n                                    </div>\n                                </div>\n                                <div className={Style.btn_div}>\n                                    <button className={Style.card_btn}>Add to team</button>\n                                </div>\n                            </div>\n                            <div className={Style.card} style={{backgroundColor:\"#78cf9a\"}} ref={provided.innerRef} {...provided.droppableProps}>\n                                <div className={Style.card_header}>\n                                    <p style={{color:\"white\"}}>+ Add another list</p>\n                                </div>\n                                <div className={Style.item_card_arrng}>\n                                    {\n                                        this.state.final.length > 0?\n                                            this.state.final.map((e)=>{\n                                                return(\n                                                    <div className={Style.item_card}>{e}</div>\n                                                )\n                                            })\n                                        :\n                                        null\n                                    }\n                                        \n                                </div>\n                            </div>\n                        </>\n                        )}\n                    </Droppable>\n                </DragDropContext>\n                </div>\n            </div>\n        )\n    }\n}\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":32,"column":21,"nodeType":"46","endLine":32,"endColumn":83},{"ruleId":"47","severity":1,"message":"48","line":25,"column":17,"nodeType":"49","messageId":"50","endLine":25,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":50,"column":57,"nodeType":"53","endLine":50,"endColumn":126},{"ruleId":"44","severity":1,"message":"45","line":72,"column":41,"nodeType":"46","endLine":72,"endColumn":68},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]